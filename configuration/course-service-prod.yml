spring:
  output:
    ansi:
      enabled: ${SPRING_OUTPUT_ANSI_ENABLED:ALWAYS}
  threads:
    virtual:
      enabled: ${SPRING_THREADS_VIRTUAL_ENABLED:true}
  main:
    allow-circular-references: ${SPRING_MAIN_ALLOW_CIRCULAR_REFERENCES:true}
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:h2:mem:course-service}
    username: ${SPRING_DATASOURCE_USERNAME:sa}
    password: ${SPRING_DATASOURCE_PASSWORD:sa}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.h2.Driver}
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:create-drop}
    show-sql: ${SPRING_JPA_SHOW_SQL:true}
  h2:
    console:
      path: ${SPRING_H2_CONSOLE_PATH:/h2-console}
      enabled: ${SPRING_H2_CONSOLE_ENABLED:true}
  mvc:
    throw-exception-if-no-handler-found: ${SPRING_MVC_THROW_EXCEPTION_IF_NO_HANDLER_FOUND:true}
  web:
    resources:
      add-mappings: ${SPRING_WEB_RESOURCES_ADD_MAPPINGS:false}
  cache:
    type: ${SPRING_CACHE_TYPE:redis}
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:localhost}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      lettuce:
        pool:
          max-active: ${SPRING_DATA_REDIS_LETTUCE_POOL_MAX_ACTIVE:8}
          max-idle: ${SPRING_DATA_REDIS_LETTUCE_POOL_MAX_IDLE:8}
          min-idle: ${SPRING_DATA_REDIS_LETTUCE_POOL_MIN_IDLE:0}
          max-wait: ${SPRING_DATA_REDIS_LETTUCE_POOL_MAX_WAIT:-1}
 
security:
  authorization:
    paths:
      - path: ${SECURITY_AUTHORIZATION_COURSES_PATH:/api/courses}
        method: ${SECURITY_AUTHORIZATION_COURSES_METHOD:GET}
        roles: ${SECURITY_AUTHORIZATION_COURSES_ROLES:}
      - path: ${SECURITY_AUTHORIZATION_COURSES_WILDCARD_PATH:/api/courses/**}
        method: ${SECURITY_AUTHORIZATION_COURSES_WILDCARD_METHOD:GET}
        roles: ${SECURITY_AUTHORIZATION_COURSES_WILDCARD_ROLES:}
      - path: ${SECURITY_AUTHORIZATION_COURSES_CODE_PATH:/api/courses/code/**}
        method: ${SECURITY_AUTHORIZATION_COURSES_CODE_METHOD:GET}
        roles: ${SECURITY_AUTHORIZATION_COURSES_CODE_ROLES:}
      - path: ${SECURITY_AUTHORIZATION_COURSES_CREATE_PATH:/api/courses}
        method: ${SECURITY_AUTHORIZATION_COURSES_CREATE_METHOD:POST}
        roles: ${SECURITY_AUTHORIZATION_COURSES_CREATE_ROLES:ROLE_ADMIN}
      - path: ${SECURITY_AUTHORIZATION_COURSES_DELETE_PATH:/api/courses/**}
        method: ${SECURITY_AUTHORIZATION_COURSES_DELETE_METHOD:DELETE}
        roles: ${SECURITY_AUTHORIZATION_COURSES_DELETE_ROLES:ROLE_ADMIN}


eureka:
  client:
    register-with-eureka: ${EUREKA_CLIENT_REGISTER_WITH_EUREKA:true}
    fetch-registry: ${EUREKA_CLIENT_FETCH_REGISTRY:true}
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8761/eureka/}
    registry-fetch-interval-seconds: ${EUREKA_CLIENT_REGISTRY_FETCH_INTERVAL_SECONDS:2}
  instance:
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:true}
    lease-renewal-interval-in-seconds: ${EUREKA_INSTANCE_LEASE_RENEWAL_INTERVAL_IN_SECONDS:2}
    lease-expiration-duration-in-seconds: ${EUREKA_INSTANCE_LEASE_EXPIRATION_DURATION_IN_SECONDS:5}

management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:*}
  health:
    circuitbreakers:
      enabled: ${MANAGEMENT_HEALTH_CIRCUITBREAKERS_ENABLED:true}
  endpoint:
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:ALWAYS}
  tracing:
    enabled: ${MANAGEMENT_TRACING_ENABLED:true}
    sampling:
      probability: ${MANAGEMENT_TRACING_SAMPLING_PROBABILITY:1.0}
  zipkin:
    tracing:
      endpoint: ${MANAGEMENT_ZIPKIN_TRACING_ENDPOINT:http://localhost:9411/api/v2/spans}

resilience4j:
  circuitbreaker:
    instances:
      myCircuitBreaker:
        registerHealthIndicator: ${RESILIENCE4J_CIRCUITBREAKER_INSTANCES_MY_CIRCUITBREAKER_REGISTER_HEALTH_INDICATOR:true}
        failureRateThreshold: ${RESILIENCE4J_CIRCUITBREAKER_INSTANCES_MY_CIRCUITBREAKER_FAILURE_RATE_THRESHOLD:20}
        minimumNumberOfCalls: ${RESILIENCE4J_CIRCUITBREAKER_INSTANCES_MY_CIRCUITBREAKER_MINIMUM_NUMBER_OF_CALLS:5}
        slidingWindowSize: ${RESILIENCE4J_CIRCUITBREAKER_INSTANCES_MY_CIRCUITBREAKER_SLIDING_WINDOW_SIZE:10}
        waitDurationInOpenState: ${RESILIENCE4J_CIRCUITBREAKER_INSTANCES_MY_CIRCUITBREAKER_WAIT_DURATION_IN_OPEN_STATE:5s}
        permittedNumberOfCallsInHalfOpenState: ${RESILIENCE4J_CIRCUITBREAKER_INSTANCES_MY_CIRCUITBREAKER_PERMITTED_NUMBER_OF_CALLS_IN_HALF_OPEN_STATE:3}
        automaticTransitionFromOpenToHalfOpenEnabled: ${RESILIENCE4J_CIRCUITBREAKER_INSTANCES_MY_CIRCUITBREAKER_AUTOMATIC_TRANSITION_FROM_OPEN_TO_HALF_OPEN_ENABLED:true}
        slidingWindowType: ${RESILIENCE4J_CIRCUITBREAKER_INSTANCES_MY_CIRCUITBREAKER_SLIDING_WINDOW_TYPE:COUNT_BASED}

  retry:
    instances:
      myRetry:
        registerHealthIndicator: ${RESILIENCE4J_RETRY_INSTANCES_MYRETRY_REGISTER_HEALTH_INDICATOR:true}
        retryCount: ${RESILIENCE4J_RETRY_INSTANCES_MYRETRY_RETRY_COUNT:3}
        waitDuration: ${RESILIENCE4J_RETRY_INSTANCES_MYRETRY_WAIT_DURATION:2s}
