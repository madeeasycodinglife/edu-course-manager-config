spring:
  output:
    ansi:
      enabled: ALWAYS
  threads:
    virtual:
      enabled: true
  main:
    allow-circular-references: true
  cache:
    type: redis
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:h2:mem:user-service}
    username: ${SPRING_DATASOURCE_USERNAME:sa}
    password: ${SPRING_DATASOURCE_PASSWORD:sa}
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:create-drop}
    show-sql: ${SPRING_JPA_SHOW_SQL:true}
  h2:
    console:
      path: /h2-console
      enabled: ${SPRING_H2_CONSOLE_ENABLED:true}
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
    registry-fetch-interval-seconds: 2
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 3
    lease-expiration-duration-in-seconds: 5

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: ALWAYS
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_TRACING_ENDPOINT:http://localhost:9411/api/v2/spans}

resilience4j:
  circuitbreaker:
    instances:
      myCircuitBreaker:
        registerHealthIndicator: true
        failureRateThreshold: 20
        minimumNumberOfCalls: 5
        slidingWindowSize: 10
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      myRetry:
        registerHealthIndicator: true
        retryCount: 3
        waitDuration: 2s
